"serv": "ts-node-dev --respawn --pretty --transpile-only server.ts",

 // "server": "nodemon --exec ts-node server.ts",
 "server": "nodemon server.ts",


notes:

1. in GraphQL, all types are nullable by default!
2. to get object from mutation with saving: return a promise, resolve with the product!
3. urql - results.stale crucial for having up to date db data! 
[server.js & SingleBookmark -> favicon test on click]
[server.js & testMutation -> adding additional data through middleware and passing to graphql resolver test]


 issues:
 
 DONE 2. working graphql playground DONE
 DONE 3. adding user doesn't return anything on graphql playground? (but it returns in changeSettings) (see notes pt.2) DONE
 DONE 5. bookmarkSchema.ts: is <Array> type enough? [string] DONE 
 DONE 3. id: string | number or string only? unify with client (client: string only) DONE
 DONE 4. client: SingleTabData: [object] | never[] | [] ????
 XX 6. userSchema gets ref to settingsSchema, should it be also the other war around? (ref to settingsSchema is no more there)XX
   <- not being used actually in the client? (items deleted from rss clientside) DONE
 DONE 8. client: ALL_TAGS should not be an id but rather deletable property should be used! ids will be added automatically be database DONE
 DONE 9. deleteUser -> promise.all should be used instead of individual promises? for performance DONE
XXX 11. deleteTabMutation -> should it also delete related Bookmark automatically? NO -> bookmarks still remain in All folderXX
 
 DONE 14. non-null types: same everywhere! (nonnulles deleted for consitency - loginmut, revoketoken, probable should be implemented partially) DONE
 ?? 15. fields -> id can be an argument even if it is never used? delete it from fields? (fields are fnot only for args)??
 DONE 16. upserts in changeMutations -> should be false mostly? (all false )DONE
DONE 16. make npm run dev open 2 console instances (no changes, npm-run-all worked once tested) DONE 
 DONE 18. client: comment out useStorage (zustand's perist commented out) DONE
DONE 18. Column: better error handling? (plain error.message in COlumn & others)DONE
X 19. bookmarks: better query -> finding the bookmarks matched to a particular tab right away (no point?) X
XXX 22. use zustand state conditionally if the user is not authenticated. no, zustand state is always on, even if user is authenticated, is just not used in that case XX
DONE 21. unhandled promise rejections! addUser, - not encountered it anymore
  good practice-> calling reject with error -> done, returns after reject commented out
DONE 23. delete testUserId in the end DONE
  .catch after reject -> unhandled promise rejections should dissapear, tried but catch on undefined errors happened, see #230DONE
DONE 24. client: rss settings merges with global settings -> test -> delete all commented out code DONE
DONE 27. globalSettings & single rss settings make it impossible to enter a value other than 5-15! DONE
DONE 28. client: make + & - for rss itemsPerPage  DONE
XX 29. Main -> fetching and date are after useEffects (globalSettings in a useEffect dep) but globalSettings is declared already?
(no img fetchcin in Main anymore, img taken from settings in MainWrapper)) XX
DONE 30. globalSettings taken either from props or from hooks (hooks cannot apply if useEffect uses globalSettings
+ it requires more code) -> unify? -> currently hook is in MainWrapper & Column  (MainWrapper only now)DONE
DONE 32. clientside: hooks for store -> sometimes it's state.tabs, sometimes store.tabs -> unify -> unified as store DONE
??? 33. take care of state other that settings, tabs & bookmarks (use of existings queries should be enough?) ???
 DONE 34. mutations -> proper typescript types! DONE
 DONE? 35. client-side: unify column_1 naming with server-side naming (colColor_1 itp) when the client-side code
 will be working again for nonauthorised user! (colColor everywhere?) ?DONE
?? 36. addBookmark -> tabQueries should be refetched?
 (no need? bookmarks are being filterd in Tab by tags instead, bookmarkAllTags is taking care of empty folders) ??
?? 37. way to use urql as a central state? ??
DONE 38. editBookmark doesn't work on the client! DONE
DONE 39. objCreators: too much repetition in db tab creators? DONE
DONE 40. tabIdsUsedByBookmarks -> change it (it should be a list of all tabs ids that are bookmarks tags tabIdsUsedByBookmarks) or use mongoose query!!!! DONE
?? 41. newTab -> no color as argument, should be null (createBasicTabs already provides color: null) ??
?? 42. editing Tab -> bookmarks are not sorted alphabetically! (tested -> should be sorted just right)??
DONE 43. Tab (and other components further down?) should take tab data from Column (context??), not from db? (data taken from dbContext)DONE
DONE 45. logic for tab deletion in Grid work only thanks to setTimeout() [in Boomark_lowerUI] -> make it better!!! DONE (result.stale used!!!)
??45. memory leaks? when adding bookmark (tested - not occured) ??
DONE 46. bookmark /tabs database interfaces everywhere! (now both from context) DONE
DONE 47. promise.all -> no need for new Promise everywhere? mutation return promises (change in Bookmark_lowerUI, no promise.all in Grids now, ) DONE
DONE 47.5 useBookmarks & useTabs -> mark which methods are used server-side! DONE
XX 48. explain somewhere to the user why disable drag & drop is there (will be incluted in initial note) XX
DONE 49. rss -> still not working because of CORS, fetch them server side? DONE
DONE 50. server.ts -> figure out which cors urls are actually needed
 (no need to include every route - only origin - scheme (protocol), hostname (domain), and port) DONE
 DONE 52. change app.use to app.get / app.post?
  (change in case of RSS. app.use is meant for binding middleware, get post etc. to handling a specific route ) DONE
DONE 53. change server file upload logic to graphql? DONE
DONE 54. move backgroundImg logic from server.js? (multer.ts created in utils) DONE
XX 56. clientside: make it possible to choose backgroundImg colors also from settings?
 or close the modal and open backgroundColors menu (columns colors are on the left anyway)XX
DONE 57. is path module needed? (server.js (yes)DONE
DONE 58. status 201 (all statuses in server.ts updated)DONE
DONE 59. graphql for file upload? use middleware which should detect if the file is attached to post req DONE
DONE 62. upload background img -> should use one btn only?? DONE
DONE 63. cannot upload image if there are spaces in the file name? spaces replaced by "_" DONE
DONE 66. background img - remove it once the user is deleted? implemented already -test it! {recursive: true} added DONE
DONE 67. delete all test mutation code in the end DONE
DONE 69. delete unused test_svgs (for alt links), rename the chosen one DONE
?? 70. singleBookmarkData: change interface to BookmarkDatabase_i ?
 (interface for bookmarks is being changed but there maybe problems, see other notes) ??
XX 71. msg to user when clicking custom img and there is none present (file browser starts instead) XX
DONE 72. graphql ID vd string type, they may be mixed DONE
DONE 75. fetchFavicon in server.js -> delete & uninstall? (an API in SingleBookmark used instead) DONE
? 75. Main -> change context values obj, so it is taken from state directly (done already?) ?
DONE 73. user creation: check if user name or email already exists DONE
DONE 74. implement token versioning: refreshToken DONE
XX 76. AppWrapper, MainWrapper in different placec - chaos? no AppWrapper anymore XX
XXX 77. UpperRightMenu: loggedInState -> change for it to be compatible with authContext (auth is taken from zustand now) XX
X78. middleware for token -> generated code for types is being used? (probably not - types taken from types package?)X
DONE 79. is case of failure, accessToken will be an empty string
 - to change? compare with loginMutation (only refresh token can be "") DONE
DONE 81. logout mutation: is refreshing site -why? (not anymore, probably because is going to modal firs?) DONE
DONE 82. uninstall react-tracked DONE
??  84. user exp not perfect when logging out? flickering (no longer the case)  ?? 
DONE 85. Profile & LoginRegister doubled components (Profile & Profile_input deleted)DONE
DONE !86. change initial load to localhost3000/ !  (client - package.json homepage changed to "/")DONE
?? 87. auth error - no user or no password - shouln't be separate errors! (Message for login changed)??
DONE 88. isAuth -> ts errors (RequestWithAuth interface added) DON
DONE 89. deleting all data when a user is deleted! done already?
 check (works except for the backgroundImg, see #61) DONE
DONE 90. option to delete account? DONE
xxx 91. some img should be created as a custom image in the moment new user is created?
(instead clicking "custom image" opens window for file browsing)) xxx 
DONE 92. currently -> not authenticated -> test user from db is used -> change it to client only demo DONE
DONE 93. notes on queries/schema/mongo etc. DONE
DONE 94. Main, BackgroundSettings_Upload -> backgroundImgKey -> code not used anymore -> delete?
(backgroundImgKey was used for context, query from db instead of context now, contex deleted) DONE
DONE 95. unify rssFetch & backgroundFetch serverside -> errors etc.  DONE
DONE 98. delete data -> rssExample DONE
DONE 109. backgroundImgUpload funcion -> for !req.body is next() needed? (yes, following code is not executed if there is no body) DONE
DONE 113. xxgetting background img automaticallyxx - browse files if there is no user img instead DONE
DONE 127. implement token revoking !!!! DONE
DONE 137. changing between 2 differen users, check user queries DONE !!! User.findById(userId) !!!
DONE 138. registering user with same name/email -> still make db entry!!! even though the err is displayed DONE 
DONE 140. x hide/unhide password x password input type instead DONE
DONE 148. after registering -> automatically fill up username field in Login? DONE
DONE 150. change naming to ByUser & ByAdmin DONE
DONE 151. check if changeUSer "by admin" works DONE (reworked)
DONE 157. UserProfile -> simplify error logic! less ifs, errors received serverside if no proper data returned DONE
DONE 161. successful register message && successful user deletion- when? DONE (in useAuth zustand hook)
DONE 164. prevent copying new password & pastying in password confirmation  DONE
DONE 165. LoginRegister_input naming change (component also used elsewhere) DONE
DONE 171. deleteUserByAdminMutation -> change so it is possible to delete many users DONE
DONE 175. delete AppWrapper DONE
DONE 178. after registering & redirecting to login -> focus should be set on password DONE
DONE 179. after registering -> register fields should be emptied DONE
DONE !!! 192. email with all .env codes !!! uj DONE
DONE 204. all userIdOrNoId logic -> convert to ? : DONE
DONE 208. BackgroundSettings-> if no userId -> implement logic to suggest creating an account
BackgroundSettings_Upload doesn't have to be touched though? code won't be executed DONE
DONE 211. make non-auth data persist in local storage DONE
DONE 215. (first bug fixes for nonAuth version)  DONE new bookmark DONE, DONE resetToDefaul DONE , allTags when hidden problem, DONE cannot edit tab DONE, DONE cannot delete bookmars DONE 
DONE 220. auth version problems after implementing, non auth version: DONE
DONE -not poss to change col colors
DONe
-n p to change to normal background
- not poss to add bookmark, tabs itp for the top menu
- not possible to change settings
DONE
But possible to edit bookmarks, delete, drag
& possible to add bookmarks, tabs in the lower Ui,
& possible to edit folders
DONE background Color possible now in no pic mode


GOOD enough?
  no GraphQLNonNull used, good enough this time
  60. flickering when uploadin background img file
  1. livereload npm (to restart client if any changes in server is detected)
  guide to implement, not tested:
  https://stackoverflow.com/questions/62403571/hot-reloading-in-a-react-app-with-express-server
  10. typescript doesn't work for schemas?
  manaul static methods with mongoose model methods inside them should be used? use sth different than mongoose - papr?
  done 51. fix any types (server.js multer?) (isAuth interface but not used in multer, backgroundImgResult types) done
  DONE 64. npm modules should be imported like: import multer = require("multer"). with const typescript types are not working!!
  change everywhere!!  (change with exception of jsonwebtoken, some ts-ignores added in server.ts, problems with mutation & query root see #246)DONE
  ? 96.server.ts unify -> different reponses, sometimes they are objects - not needed
  good enough? - rss & backgroundImg unified, token different but it is more complex ?
GOOD enough




!46. bookmarks not up to date when adding newBookmark if there are none (auth vers only)
 -> hacky solution only, reexectuing query in Bookmarks which causes rerender - solve?
(possible solution to get rid of rerender at least -> no bookmarks in any of useeffect? diff way for calc. tabIdsUsedByBookmarks)
? 61. background img -> currently there is no point in storing it in db, as it is get from server only??
BackgroundImg schema in server.ts - does it work?? (!!! updade deleteUserMutation (x2) -> currently it is not deleting images!)
  (BackgroundImgSchema in server.ts does work -should it be deleted?, because querying is done from server only )   ?
68. list all links to free svgs in notes [one more svg may be implemented still]



99. server.ts -> make separate files
100. server.txs -> rootValue -> is it needed?

102. react keys -> they should by indices ! change to id

103. unify callback functions -> function declaration instead of () => { }everywherw?
104. multer.any() <- change to single("name") somehow
105. delete the other background image
106. make it possible to changle background img when not logged in, again
107. write notes for file upload system!
108. not possible to write even a console.log in backgroundImgMutation even while is working?


110. demo id or test id naming
111. rootValue -> not needed?? check multer express graphql tut. change backgroundImgMutaion
112. test user Id server.ts check import


114. fallback if no backgroundImg available? or test it if it is not broking the app at least
115. backgroundImgQuery -> no variable needed? check after implementing unlogged version
116. useCallback -> is it really needed for uploads? no callback used right now
117. backgroundSettings_Upload -> reexecute query works after introducint async function!
118. change background upload UI!
119. BackgroudnSettings_Upload typescript issues
120. urql query from rss -> archive
121. get favicon server.ts -> archive
122. ts -> less any types
123. custom background img -> should work if there is no file in the beginning?
124. zustand hooks -> delete or implent when logged out?
125. should refreshToken() return null in case of failure in App.ts??
126. didAuthError not needed? since there will be (!isAuth) logic in qraphql mutation/queries.
instead, willAuthError is needed? even if it does not trigger error (logic for refreshing is not needed in getAuth?), 
it will trigger refresh in getAuth


128. update token notes (refreshing tokens -> always two tokens are being refreshed, that is by design? probably)
129. implement willAuthError for better performance
130. improve getAuth -> it should not include refresh token logic in the first run?
131. revokingToken -> anybody can do it?? how to secure this?
132. implement Registration !!!
133. revokingToken -> "query was already executed:" mixing promises with callback??
134. Profile -> used for demo version? change name, clashes with UserProfile
135. LoginSVG -> move to the left?
136. change name to username everywhere?
139. wiki-speed-typing, take care of 138 issue!
141. deleteUserMutation -> keep it! proper way to delete user by admin
142. mutation.ts -> naming: some with Mutation at the end some not - unify!
143. upperUiContext -> logic for demo/unlogged version mixed with ui focus logic (does it work?)
UserProfile/LoginRegister -> check upperUiContext dispatches

144. clientSide -> change some rendering function to be anonymous inline funcions?? IIFS!

145. deleteAccountByUserMutation ->  // password: { type: new GraphQLNonNull(GraphQLString) }, 
unify across other mutations!
146. backgroundImgs -> are they being saved to db?
147. darker default background img?

149. more rigid password checking?
152. mutations-> change args from manual to Fields
153. serverside interfaces are in types files, better interfaces sharing between client and server?
154. UserProfile -> mutations should succeed if there is proper field being send back
155. better email validation
156. UserProfile -> no server connection error -> !res may be not the right kind of logic for it?
158. addUserMutation -> change so it distinguish between username and email already present in DB
159. all or almost all mutations should have error fields? 
160. editUser -> update causes flickering due to reexectuing query?

162. whenever returning to editUser, name & email should be filled again
163. UserProfile -> setNotification(null) everywhere not needed?

166. after implementing forgot password logic -> make sure that it won't work when token is revoked?
167. changeUserByAdmin -> can it remain in production??
168. objectAssign -> convert to function?
169. changeUserByAdmin -> changing password - should it be left out?
170. AuthNotification components -> implement in UserProfile

172. deleteUserByAdminMutation -> not getting proper returned data from graphql
173. deleteUserByAdminMutation -> put delete user first, only then settings etc.
174. development mode -> should work also when offline?


175.5 auth -> zustand, other central state -> context. unify? check downside of using context
175.75 check if all contexts are used!!! backgroundImgContext adn authContext not being used

176. objects as props in more places? like paddingProps in Main
177. useAuth zustand hook -> loginErrorMessage -> delete or implement?

180. focus should be on first field after clicking Login or Register
181. clean db in the end
182. wiki-speed-typing - better login/register looks?
183. login/register modals -> name of the app should be visible somewhere?
184. Profile_Input passedRef -> check agains BackgroudnSettings_Upload
185. common upper component for login-register, passwordforgotten & passwordChange
186. forgotPasswordMutation -> returning true when no user. ??
187. option to make passwords visible!
188. wiki-speed-typing -> check if password retrival is available still
189. email with pass change ends in span -> put warning to check spam??
190. PasswordForgotten  / forgotPasswordMutation -> more consistent naming?
191. PasswordForgotten -> forgotPasswordMutation should return false sometimes and it should be handled?
to get info clientside that there is no regisered user

{
  "data": {
    "forgotPassword": true
  }
}


193. change all urql components error handling to similar to UserProfile (LoginRegister for sure)
194. changePasswordAfterForgot -> in case of token expiration -> link to forgotpass should be visible
195. displaying res.error.message for graphql errors if it is present? [no but sth should be display clientside accordingly?]
196. test changePasswordAfterForgot mutation by deleting user in the meantime
197. ForgottenPassChange should display user name??
198. Login pass forgot -> should be below Login btn?
199. tabsDb and tabsNotAuth etc -> should be in props instead of taken out of Context every time? less code
200. tabs reset to default: in auth version happens in Grid, in non-auth in Tab -> unify?
(should be done for TAB_CONTENT_DEFAULT at least?)
201. tabIdsUsedByBookmarks -> MERN -> created every time in one of Grid's useEffect (check EditTab_main editTab wrapper also)
old not-auth -> placed in central bookmarks state. check if it works properly, unify?

202. Grid tabDeletingPause introduced in MERN version -> can/should it be implemented for non-auth version also?

203. settings interfaces db & demo-> unify, clear (all interfaces shoul be moved out of client?)


206. useBookmark -> string types for id in MERN version number|string in old client only ver. -> no clashes
change ids in the starting data for nonAuth to strings?
!!!!! 207. SingleBookmark -> implement icon fallback for nonAuth Version!
207. NewBookmark_UpperUI -> ts-ignore had to be user 2x -> why??
209. settings should be unified? add null userId and null to non-auth version?
210. BackgroundSettings_Upload -> instead of hidden class - do not render in in BackgroundSettings render function
212. Bookmark_local tab_indices - is it needed?
213. SingleBookmark -> interface for nonAuth is being used also for auth?? the one for auth being not used
214. delete userIdOrDemoId
216. allTags when hidden problem -> taking too much space!? check in auth and non-auth versions
217. tab deletion confirmation -> implement?
218. check localStorage for auth version

219. notes -> should be reworked, so they can be edited in place?
221. color hooks - to be partially deleted?
222. update App structure - routes!
223. rssSettings problem -> value lower than 5 and 15 can be entered! no easy way to increase/decrese value??
224. globalSettings rss items number-> hover field, implement is alse elsewhere??
225. Disable drag & drop -> should be sth like disable drag & drop for tabs??



background Color possible now in no pic mode

221. objCreators -> bookmarkNonAuth done wrong? id not needed in db version?
222. LoginSuccessfull notification -> blinking after user deletion! test it, remove it?
223. closeAllTabsState -> in Grid (in grid both auth and non-auth code is used? check!) or Tab if either non-auth or auth -> unify?
224. tabDeletingPause in Grid -> hack? explain how it works
225. is aria-label present in all btns?
226. tabsData, bookmarkData, settignsData -> same as client but with userId? unify? PROblem with changing of useTabs!
227. mutations -> sometimes the graphql args are listed, Fields should be imported and spread instead
Fields in userType & args -> should they always be the same? non-null for args?
228. tabIdsUsedByBookmarks -> unify?
229. Browser error: Default Client: No client has been specified using urql's Provider.This means that urql will be falling back to defaults including making requests to `/graphql`.
If that's not what you want, please create a client and add a Provider.
230. promises should start only if an auth code is executed? ex. Bookmark_lowerUI. then maybe implement catching
231. local development -> user has to be created on different pcs separetely or no backgroundImg??
232. rss local -> changing global rss settings is not being reflected immediately!!
(same as?: 44. clientside: tab are set to default individually -> should be handle more centrally? (in Grid, as it is done server-side now),)
233. rrs itemsPerPage -> test on mobile! real one
234. rss itemPerPage -> cannot be set by keyboard to more than 9 -> problem?
235. non-auth version problem with less column settings-> missing content?
236. globalSettings to globalSettignsDb rename everywhere? (currently in Column only)
237. globalSettings interfaces - smtms different smtms from db?
238. tabIdsUsedByBookmarks -> for deleting empty Tabs only? maybe it would be better to not render empty tabs && delete empty one?
239. bookmarks itp -> in the end ts is chosing the type by itself, even if it should be split type
240. bookmarks are rendered only after tab is open -> maybe they should be just hidden instead?
241. browser warning: Default Client: No client has been specified using urql's Provider.This means that urql will be falling back to defaults including making requests to `/graphql`.
If that's not what you want, please create a client and add a Provider.
242. utils folder server code -> move up?
243. background color no pic -> rectangle instead of doc svgs, should be filled with color?
244. ts generated file -> get rid of it?
245. fetch RSS query file & graphql -> to delete
246. root mutation & query files -> fix types (after changin const to import) one of the mutation is done right - compare!
247. haslo do gmaila wyslac
248. update queries mutation examples
249. deleteUserByAdminMutation -> not returning anything in graphql playground?
change "ids" naming?
250. login after registering -> "user does not exiss" doen't clean, test all possibilities
251. custom backgroundImg name is not displayed when going to backgroundImg options in case it is selected before
252. clientSIde reaction to rss and background img query errors?
253. backgroundImg folders not being deleted from the app after user deletion!
254. backgroundImg is not needed?? works without



{
  filename: 'nature-3082832_1920.jpg',
  mimetype: 'image/jpeg',
  encoding: '7bit',
  createReadStream: [Function: createReadStream]      
}


"urql": "^2.0.5"


firecamp upload mutation: 
variables should be like that:
{
  "image": ""
}

mutation ($image: Upload!) {
    backgroundImgMutation(image: $image)
  }

6239ceb924aee400c5bc84ce"

======================================
JWT logic: 

0. Login component -> login Mutation (see below -> res from the server contains the refresh token in a cookie and is setting it on client),
 access token & authenticatedUserId is taken from the server response is saved to central state

serverside: Login mutation (vars: name/email, password): 
1. searches db by name/email
2. check if password is valid
3. sends refresh token (first creates it) in a cookie? (from the server)
 - so client has a refresh token in a cookie set now!!
[refresh token is being send in a request only if hiting /refresh_token (point 6)]
4. creates accessToken, returns it so it can be stored in central state (point 0)

5. clientside (ApolloClient/urqlClient?):
 every request to the server is going to have access token (in the headers) taken from central state

6. clientside during every app reload:
 App.js is posting to /refresh_token route on the server,
  which verifies if client has a valid refresh token in a cookie,
  if yes -> 
    server creates new refresh token and sends it back
    server sends access token in a response from the server
    access token is stored clientside in memory (central state)

7. creating new access token if old expires -> Apollo middleware? what about urql??

8. mutation/queries are being protected by isAuth, which checks if accessTOken is valid

9. logOut -> setting empty string in a cookie instead of refresh token + setting access token to null clientside

...more, check


To so sum up, after login: 
1. Client has a cookie with refresh token (that is not being sent with every request, but only to /refresh_token endpoint),
access token is stored in client's memory (state manager)), and it is being sent in every request to the server (in headers)
(mutations/queries are being protected by isAuth on the server, which checks if there is proper accessToken set in the header)

2. app reload: post to /refresh_token route -> after validating if client has proper refresh token in a cookie, new refresh token & access token is being sent to client

3. creating new access token if old expires -> apollo middleware



urql auth:

login mutation: code from willAuthError won't run!
central state should be updated after jwt logic is handled??

setting nodemailer -> 2 step authentication in gmail -> setting app password
https://stackoverflow.com/questions/59188483/error-invalid-login-535-5-7-8-username-and-password-not-accepted?answertab=trending#tab-top



===========
mongo/schema etc .notes


server.ts -> graphql server from express-graphql, that takes a schema
schema -> root mutation & root query
individual mutations & queries -> using models from mongoModels folder (root of the app)

client -> graphql folder -> graphql queries for mutation & queries
















======================
other notes


react-tracked -> optimized rerender for zustand itp?

bookmarkAllTags purpose -> delete a Tab if its last bookmark is deleted



export interface AuthContextObj_i {
  isAuthenticated: boolean;
  authenticatedUserId: null | string;
  accessToken: null | string;
  loginNotification: null | string;
  loginErrorMessage: null | string;
}

export interface AuthContextZustand_i extends AuthContextObj_i {
  logout: () => void;
  loginAttempt: (
    isAuthenticated: boolean,
    userId: string,
    token: string
  ) => void;
}

import create from "zustand";

import { AuthContextZustand_i } from "../../utils/interfaces";

export const useAuth = create<AuthContextZustand_i>((set) => ({
  isAuthenticated: false,
  authenticatedUserId: null,
  accessToken: null,
  loginNotification: null,
  loginErrorMessage: null,
  logout: () => set(state => ({
      ...state,
      isAuthenticated: false,
      authenticatedUserId: null,
      accessToken: null
  })),
  loginAttempt: (isAuthenticated, userId, token) => set(state => ({
      ...state,
      isAuthenticated: isAuthenticated,
      authenticatedUserId: userId,
      accessToken: token
  }))

//   setLoggedInState: (trueOrFalse) =>
//     set((state) => ({
//       ...state,
//       loggedInState: trueOrFalse,
//     })),



}));


35 j etoh


100Et - 35 j

35 - 33.6 jedn
      35