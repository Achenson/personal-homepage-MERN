"serv": "ts-node-dev --respawn --pretty --transpile-only server.ts",

 // "server": "nodemon --exec ts-node server.ts",
 "server": "nodemon server.ts",


notes:

1. in GraphQL, all types are nullable by default!
2. to get object from mutation with saving: return a promise, resolve with the product!


 issues:
 
 DONE 2. working graphql playground DONE
 DONE 3. adding user doesn't return anything on graphql playground? (but it returns in changeSettings) (see notes pt.2) DONE
 DONE 5. bookmarkSchema.ts: is <Array> type enough? [string] DONE 
 DONE 3. id: string | number or string only? unify with client (client: string only) DONE
 DONE 4. client: SingleTabData: [object] | never[] | [] ????
   <- not being used actually in the client? (items deleted from rss clientside) DONE
 DONE 8. client: ALL_TAGS should not be an id but rather deletable property should be used! ids will be added automatically be database DONE
 DONE 9. deleteUser -> promise.all should be used instead of individual promises? for performance DONE
 DONE 16. upserts in changeMutations -> should be false mostly? (all false )DONE
 DONE 18. client: comment out useStorage (zustand's perist commented out) DONE
 DONE 34. mutations -> proper typescript types! DONE
 
 1. livereload npm
 
 6. userSchema gets ref to settingsSchema, should it be also the other war around?
 
10. typescript doesn't work for schemas?

11. deleteTabMutation -> should it also delete related Bookmark automatically?
14. non-null types: same everywhere!
15. fields -> id can be an argument even if it is never used? delete it from fields?
16. make npm run dev open 2 console instances
17. bookmarkAllTags should be filled from db at the start

18. Column: better error handling?
19. bookmarks: better query -> finding the bookmarks matched to a particular tab right away
21. unhandled promise rejections! addUser, handle it everywhere!
22. use zustand state conditionally if the user is not authenticated

23. delete testUserId in the end
24. client: rss settings merges with global settings -> test -> delete all commented out code
25. typescript: save eg. settingsType new Settings -> save() method does not exist
26. all settings working with db init
27. globalSettings make it impossible to enter a value other than 5-15!
28. client: make + & - for rss itemsPerPage  
29. Main -> fetching and date are after useEffects (globalSettings in a useEffect dep) but globalSettings is declared already?
30. globalSettings taken either from props or from hooks (hooks cannot apply if useEffect uses globalSettings
+ it requires more code) -> unify? -> currently hook is in MainWrapper & Column
31. interfaces: database vs client side: currently settings are from database but tabs from clientside...
32. clientside: hooks for store -> sometimes it's state.tabs, sometimes store.tabs -> unify
33. take care of state other that settings, tabs & bookmarks (use of existings queries should be enough?)
35. client-side: unify column_1 naming with server-side naming (colColor_1 itp) when the client-side code
 will be working again for nonauthorised user!
36. addBookmark -> tabQueries should be refetched?
37. way to use urql as a central state?
38. editBookmark doesn't work on the client!
39. objCreators: too much repetition in db tab creators?
40. bookmarksAllTags -> change it (it should be a list of all tabs ids that are bookmarks tags) or use mongoose query!!!!
41. newTab -> no color as argument, should be null
42. editing Tab -> bookmarks are not sorted alphabetically!
43. Tab (and other components further down?) should take tab data from Column, not from db?
44. clientside: tab are set to default individually -> should be handle more centrally? (in Grid, as it is done server-side now)
45. logic for tab deletion in Grid work only thanks to setTimeout() -> make it better!!!